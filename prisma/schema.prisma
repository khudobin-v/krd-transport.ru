// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name       String?
  email         String?   @unique
  password      String?
  role  UserRole @default(user)
  emailVerified DateTime?
  image         String?
  accounts      Account[]
   routes        UserRoute[]
}

enum UserRole {
  admin
  user
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}


model Route {
  id String @id @default(cuid())
  type RouteType 
  number String
  name String
  href String
  users   UserRoute[] 
}

enum RouteType {
  tram
  trolleybus
  bus
}

model UserRoute {
  userId  String
  routeId String
  user    User   @relation(fields: [userId], references: [id])
  route   Route  @relation(fields: [routeId], references: [id])

  @@id([userId, routeId])
}